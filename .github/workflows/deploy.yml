name: 🚀 Auto-Deploy to GitHub Pages

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC for maintenance

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  validate:
    name: 🔍 Validate & Test
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changes.outputs.should-deploy }}
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        
    - name: 🔍 Detect Changes
      id: changes
      run: |
        if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "should-deploy=true" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "should-deploy=true" >> $GITHUB_OUTPUT
        else
          echo "should-deploy=false" >> $GITHUB_OUTPUT
        fi
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install html5lib beautifulsoup4 cssutils
        
    - name: ✅ Validate HTML
      run: |
        if [ -f validate_html.py ]; then
          python validate_html.py
        else
          echo "⚠️ HTML validation script not found, skipping..."
        fi
        
    - name: ✅ Validate CSS
      run: |
        if [ -f validate_css.py ]; then
          python validate_css.py
        else
          echo "⚠️ CSS validation script not found, skipping..."
        fi
        
    - name: 🧪 Test JavaScript
      run: |
        # Basic syntax check
        node -c script.js || echo "⚠️ JavaScript syntax issues detected"
        
    - name: 🔒 Security Scan
      run: |
        # Check for common security issues
        echo "🔍 Scanning for security issues..."
        grep -r "eval\|innerHTML\|document.write" . --include="*.js" --include="*.html" || echo "✅ No obvious security issues found"

  deploy:
    name: 🚀 Deploy to GitHub Pages
    needs: validate
    runs-on: ubuntu-latest
    if: needs.validate.outputs.should-deploy == 'true'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🏗️ Setup Deployment Directory
      run: |
        echo "🏗️ Creating deployment structure..."
        mkdir -p dist
        
        # Copy main files
        cp *.html dist/ 2>/dev/null || echo "⚠️ No HTML files found"
        cp *.css dist/ 2>/dev/null || echo "⚠️ No CSS files found"
        cp *.js dist/ 2>/dev/null || echo "⚠️ No JS files found"
        
        # Copy directories
        if [ -d "api" ]; then cp -r api dist/; fi
        if [ -d "assets" ]; then cp -r assets dist/; fi
        if [ -d "images" ]; then cp -r images dist/; fi
        if [ -d "css" ]; then cp -r css dist/; fi
        if [ -d "js" ]; then cp -r js dist/; fi
        
        # Copy additional files
        cp requirements.txt dist/ 2>/dev/null || echo "⚠️ No requirements.txt found"
        cp README.md dist/ 2>/dev/null || echo "⚠️ No README.md found"
        cp Procfile dist/ 2>/dev/null || echo "⚠️ No Procfile found"
        
        # Create deployment info
        echo "🕒 Deployed at: $(date)" > dist/deployment-info.txt
        echo "📝 Commit: ${{ github.sha }}" >> dist/deployment-info.txt
        echo "🌿 Branch: ${{ github.ref_name }}" >> dist/deployment-info.txt
        
        echo "📁 Deployment directory contents:"
        ls -la dist/
        
    - name: 🔧 Setup Pages
      uses: actions/configure-pages@v3
      
    - name: 📤 Upload Artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './dist'
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
      
    - name: 🎉 Deployment Success
      run: |
        echo "🎉 Successfully deployed to GitHub Pages!"
        echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
        echo "⏰ Deployment completed at: $(date)"

  notify:
    name: 📢 Notify Status
    needs: [validate, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 📊 Deployment Status
      run: |
        if [[ "${{ needs.deploy.result }}" == "success" ]]; then
          echo "✅ Deployment successful!"
          echo "🌐 Your site is live and updated!"
        elif [[ "${{ needs.validate.result }}" == "failure" ]]; then
          echo "❌ Validation failed - deployment skipped"
        elif [[ "${{ needs.deploy.result }}" == "failure" ]]; then
          echo "❌ Deployment failed"
        else
          echo "ℹ️ No deployment needed (not main branch or no changes)"
        fi