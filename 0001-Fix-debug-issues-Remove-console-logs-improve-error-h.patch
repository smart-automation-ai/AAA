From df8ae52bfc998f0cafc5fe22423d93ffe5e804de Mon Sep 17 00:00:00 2001
From: Cursor AI <cursor-ai@example.com>
Date: Sat, 14 Jun 2025 14:21:07 -0500
Subject: [PATCH] Fix debug issues: Remove console logs, improve error handling

- Removed console.log/error statements from script.js
- Replaced alert() calls with styled error notifications
- Cleaned up debug print statements from Python API
- Production-ready code with better UX
---
 api/review-generator.py |  5 +----
 script.js               | 34 +++++++++++++++++++++++++++-------
 2 files changed, 28 insertions(+), 11 deletions(-)

diff --git a/api/review-generator.py b/api/review-generator.py
index 1fef12c..bc5cea0 100644
--- a/api/review-generator.py
+++ b/api/review-generator.py
@@ -241,7 +241,4 @@ if __name__ == '__main__':
     port = int(os.environ.get('PORT', 5000))
     debug = os.environ.get('DEBUG', 'False').lower() == 'true'
     
-    print(f"ðŸ¤– Smart Automation AI API starting on port {port}")
-    print(f"ðŸ¤– AI Review Response Generator ready for Tipton County businesses!")
-    
-    app.run(host='0.0.0.0', port=port, debug=debug) 
\ No newline at end of file
+    app.run(host='0.0.0.0', port=port, debug=debug)
\ No newline at end of file
diff --git a/script.js b/script.js
index 8d2b0ff..23ee49c 100644
--- a/script.js
+++ b/script.js
@@ -271,7 +271,6 @@ class EnterpriseAIWebsite {
             const response = await this.generateLocalResponse(businessName, businessType, reviewText, rating);
             this.showResponse(response);
         } catch (error) {
-            console.error('Error generating response:', error);
             this.showError('Failed to generate response. Please try again.');
         }
     }
@@ -360,7 +359,30 @@ class EnterpriseAIWebsite {
 
     showError(message) {
         document.getElementById('loadingSpinner').style.display = 'none';
-        alert(message);
+        // Show error in a more user-friendly way
+        const errorDiv = document.createElement('div');
+        errorDiv.className = 'error-message';
+        errorDiv.style.cssText = `
+            position: fixed;
+            top: 20px;
+            right: 20px;
+            background: #ff4444;
+            color: white;
+            padding: 15px 20px;
+            border-radius: 5px;
+            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
+            z-index: 10000;
+            font-weight: 500;
+        `;
+        errorDiv.textContent = message;
+        document.body.appendChild(errorDiv);
+        
+        // Auto-remove after 5 seconds
+        setTimeout(() => {
+            if (errorDiv.parentNode) {
+                errorDiv.parentNode.removeChild(errorDiv);
+            }
+        }, 5000);
     }
 
     copyResponse(event) {
@@ -377,8 +399,7 @@ class EnterpriseAIWebsite {
                 button.style.background = '';
             }, 2000);
         }).catch(err => {
-            console.error('Failed to copy text: ', err);
-            alert('Failed to copy to clipboard');
+            this.showError('Failed to copy to clipboard');
         });
     }
 
@@ -615,16 +636,15 @@ function addDemoButton() {
 if ('serviceWorker' in navigator) {
     window.addEventListener('load', function() {
         navigator.serviceWorker.register('/sw.js').then(function(registration) {
-            console.log('ServiceWorker registration successful');
+            // ServiceWorker registered successfully
         }, function(err) {
-            console.log('ServiceWorker registration failed: ', err);
+            // ServiceWorker registration failed
         });
     });
 }
 
 // Analytics placeholder (replace with your analytics code)
 function trackEvent(eventName, properties = {}) {
-    console.log('Event tracked:', eventName, properties);
     // Add your analytics tracking code here
     // Example: gtag('event', eventName, properties);
 }
-- 
2.43.0

